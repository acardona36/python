def analyze_text(text):
    
    running_total = 0
    for char in range(len(text)):
        if text[char].isalpha(): 
            running_total = running_total + 1
            
    letter_e = "eE"
    total_ees = 0
    for char in range(len(text)):
        if text[char] in letter_e:
            total_ees = total_ees + 1
                    
    
    
    num_characters = running_total
    num_of_ees = total_ees
    pct = str(float(num_of_ees/num_characters)*100) + "%"
    
    final_statement = ("The text contains {0} alphabetic characters, of which {1} ({2}) are 'e'.")
    return(final_statement.format(num_characters,num_of_ees,pct))
    



#As long as your code passes either
# tests 1-3 OR tests 4-6, it should pass in Vocareum. See below for more details.
#from test import testEqual

# Tests 1-3: solutions using string concatenation should pass these
text1 = "Eeeee"
answer1 = "The text contains 5 alphabetic characters, of which 5 (100.0%) are 'e'."
testEqual(analyze_text(text1), answer1)

text2 = "Blueberries are tasteee!"
answer2 = "The text contains 21 alphabetic characters, of which 7 (33.3333333333%) are 'e'."
testEqual(analyze_text(text2), answer2)

text3 = "Wright's book, Gadsby, contains a total of 0 of that most common symbol ;)"
answer3 = "The text contains 55 alphabetic characters, of which 0 (0.0%) are 'e'."
testEqual(analyze_text(text3), answer3)

# Tests 4-6: solutions using str.format should pass these
text4 = "Eeeee"
answer4 = "The text contains 5 alphabetic characters, of which 5 (100%) are 'e'."
testEqual(analyze_text(text4), answer4)

text5 = "Blueberries are tasteee!"
answer5 = "The text contains 21 alphabetic characters, of which 7 (33.33333333333333%) are 'e'."
testEqual(analyze_text(text5), answer5)

text6 = "Wright's book, Gadsby, contains a total of 0 of that most common symbol ;)"
answer6 = "The text contains 55 alphabetic characters, of which 0 (0%) are 'e'."
testEqual(analyze_text(text6), answer6)
